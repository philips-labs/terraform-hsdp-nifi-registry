#!/bin/bash

kill_nifi_registry() {
  echo Killing NiFi-Registry...
  docker kill nifi-registry
  docker rm nifi-registry
}

start_unsecure_nifi_registry() {
  docker run -d \
    --restart always \
    --name nifi-registry \
    --env NIFI_REGISTRY_JMX_PORT=5555 \
    --env NIFI_REGISTRY_WEB_HTTP_PORT=18080 \
    --env NIFI_REGISTRY_WEB_HTTP_HOST="${host}" \
    --env NIFI_REGISTRY_DB_TIMEZONE="${db_tz}" \
    --env NIFI_REGISTRY_DB_NAME="${db_name}" \
    --env NIFI_REGISTRY_DB_HOST="${db_host}" \
    --env NIFI_REGISTRY_DB_MAX_CONN="${db_max_conn}" \
    --env NIFI_REGISTRY_DB_USER_NAME="${db_username}" \
    --env NIFI_REGISTRY_DB_PASSWORD="${db_password}" \
    --env NIFI_REGISTRY_S3_BUCKET_NAME="${s3_bucket}" \
    --env NIFI_REGISTRY_ACCESS_KEY_ID="${s3_access_key}" \
    --env NIFI_REGISTRY_SECRET_ACCESS_KEY_ID="${s3_secret_access_key}" \
    --env NIFI_REGISTRY_S3_BUCKET_REGION="${s3_region}" \
    -v "jmx_exporter:/opt/nifi-registry/jmx" \
    -p ${port}:18080 \
    -p 10001:10001 \
    "${docker_image}"
}

docker_login(){
  if [ -n "${docker_username}" ] || [ -n "${docker_password}" ] || [ -n "${docker_registry}" ]; then
    docker login -u ${docker_username} -p ${docker_password} ${docker_registry}
  fi
}

download_jmx_agent(){
  echo "Download JMX Prometheus JavaAgent ${jmx_exporter_version}"
  mkdir -p -m 775 jmx
  mv config.yml ./jmx
  cd jmx
  curl -s -o jmx_export_agent.jar "https://repo1.maven.org/maven2/io/prometheus/jmx/jmx_prometheus_javaagent/${jmx_exporter_version}/jmx_prometheus_javaagent-${jmx_exporter_version}.jar"
  docker volume rm jmx_exporter
  docker volume create --driver local --name jmx_exporter --opt type=none --opt device=`pwd` --opt o=uid=root,gid=root --opt o=bind
  chmod 644 *
  cd ..
}

kill_nifi_registry
download_jmx_agent
docker_login
start_unsecure_nifi_registry